module a:b

// from stdlib:
global alias @e = @e

alias @Example = @e[tag == "example", level > 5+6]

func other(i Int) {}

func very_first_test
{
    const sel := @Example

    mut a := 0
    c := 3
    if 1 <= c
    {
        a = 5
        const idx := 0
        const two := 2
        b := [1 + two]
        // TODO: uncomment when const eval is implemented
        //b[idx] += 6
        //a = b[idx]
        b[0] += 6
        a = b[0]
    }

    // TODO: needs implementation of new(ArgCond-LL)
    //testbool := a <= 10

    other(2+3)

    const nbt_var_const := {
        a: 4,
        b: ["World!"],
        "my key": [; 3, 4, 5],
        bool: true
    }
    nbt_var_dyn := {
        a: a,
        b: ["Hello ", nbt_var_const.b[0]],
        nested: {
            "other\" key": [; c]
        }
    }

    for str <- nbt_var_dyn.b
    {
        copy := str
    }

    //for str_a, str_b <- [["he", "ll"], ["o", "world"]]
    //{}
}
