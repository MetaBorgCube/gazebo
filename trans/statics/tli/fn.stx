module statics/tli/fn

imports

    statics/common
    statics/statement/block
    statics/expr

rules

    fnOk : scope * Fn

    fnOk(s, FnBlock(FnSpec(tags, modifiers, name, signature), body)) :- {s_body}
        new s_body, s_body -P-> s,
        // TODO: signagure in scope as immutable variables with possible ^ct
        blockOk(s_body, body),
        true.

    fnOk(s, FnExpr(FnSpec(tags, modifiers, name, signature), e)) :- {s_body T}
        new s_body, s_body -P-> s,
        typeOfExpr(s_body, e) == T,
        // TODO: ensure return type is a subtype of T
        true.

    fnOk(s, FnExt(name, signature)) :-
        // TODO: assume everything is valid, just declare the name with signature in scope
        true.
