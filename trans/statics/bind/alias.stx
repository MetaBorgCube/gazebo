module statics/bind/alias

imports

    statics/common

rules

    declareAlias : scope * ID * scope

    declareAlias(s, name, s_sel) :-
        !alias[name, s_sel] in s.

rules

    queryAlias : scope * ID -> list((path * (string * scope)))

    queryAlias(s, name) = p :-
        query alias
            filter (P* M?) | A* and { x :- x == name}
            min $ < P, $ < M and false
            in s |-> p.

rules

    resolveAlias : scope * ID -> scope

    resolveAlias(s, name) = s_sel :- {p name'}
        queryAlias(s, name) == p,
        p == [(_, (name', s_sel))|_],
        @name.ref := name'.
