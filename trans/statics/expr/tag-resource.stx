module statics/expr/tag-resource

imports

    statics/common
    statics/bind/registry

rules // tag

    typeOfTag : scope * Tag -> TYPE

    typeOfTag(s, Tag(ident)) = T :-
        try { false } | note $[todo: infer registry]@ident,
        T == TAG(nsid("gzb", ["dummy_ref"])).

rules // resource

    typeOfResource : scope * Resource -> TYPE

    typeOfResource(s, ResourceBare(ident)) =
        typeOfResource(s, ResourceFull(ident, Props([]), NBTCompound([]))).

    typeOfResource(s, ResourceProps(ident, props)) =
        typeOfResource(s, ResourceFull(ident, props, NBTCompound([]))).

    typeOfResource(s, ResourceNBT(ident, payl)) =
        typeOfResource(s, ResourceFull(ident, Props([]), payl)).

    typeOfResource(s, ResourceFull(ident, props, payl)) = T :-
        try { false } | note $[todo: infer registry, check props and payl]@ident,
        T == RESOURCE(nsid("minecraft", ["block"])).
