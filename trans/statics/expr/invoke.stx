module statics/expr/invoke

imports

    statics/common
    statics/expr

rules

    typeOfInvoke : scope * Invoke -> TYPE

    typeOfInvoke(s, InvokeNone(e)) =
        typeOfInvoke(s, InvokeArgsKwargs(e, Args([]), Kwargs([]))).

    typeOfInvoke(s, InvokeArgs(e, a)) =
        typeOfInvoke(s, InvokeArgsKwargs(e, a, Kwargs([]))).

    typeOfInvoke(s, InvokeKwargs(e, k)) =
        typeOfInvoke(s, InvokeArgsKwargs(e, Args([]), k)).

    typeOfInvoke(s, InvokeArgsKwargs(Expr2Expr-I(e), a, k)) = Tr :- {Tfn Tpar}
        typeOfExpr(s, e) == Tfn,
        typeOfInvoke_internal(s, Tfn, a, k) == Tr | error $[cannot invoke, type [Tfn] is not a function]@e.

rules

    typeOfInvoke_internal : scope * TYPE * Args * Kwargs -> TYPE

    typeOfInvoke_internal(s, FUNC(Tpar, Tr), a, k) = Tr :-
        try { false } | note $[todo: check subtypes on the parameter types].

    typeOfInvoke_internal(s, TAG(), Args(a), Kwargs(k)) = VOID() :-
        a == [] | error $[a tag can only be invoked without arguments],
        k == [] | error $[a tag can only be invoked without arguments].

    typeOfInvoke_internal(_, _, _, _) = UNK() :-
        false.
