module statics/expr/invoke

imports

    statics/common
    statics/expr

rules

    typeOfInvoke : scope * Invoke -> TYPE

    typeOfInvoke(s, InvokeNone(e)) =
        typeOfInvoke(s, InvokeArgsKwargs(e, Args([]), Kwargs([]))).

    typeOfInvoke(s, InvokeArgs(e, a)) =
        typeOfInvoke(s, InvokeArgsKwargs(e, a, Kwargs([]))).

    typeOfInvoke(s, InvokeKwargs(e, k)) =
        typeOfInvoke(s, InvokeArgsKwargs(e, Args([]), k)).

    typeOfInvoke(s, InvokeArgsKwargs(Expr2Expr-I(e), a, k)) = Tr :- {Tfn Tpar}
        typeOfExpr(s, e) == Tfn,
        Tfn == FUNC(Tpar, Tr) | error $[cannot invoke, type [Tfn] is not a function]@e,
        try { false } | note $[todo: check subtypes on the parameter types].
