module Common

lexical sorts
  ID_UNRESTR ID
  INT FLOAT
  STRING
  STRING_CHAR BACKSLASH_CHAR
  COMMENT_CHAR INSIDE_COMMENT
  NEWLINE_EOF EOF

lexical syntax

  ID               = ID_UNRESTR
  ID_UNRESTR       = [a-zA-Z] [a-zA-Z0-9\_]*
  // TODO: allow underscores in integers
  INT              = "-"? [0-9]+
  FLOAT            = INT FLOAT_SUFFIX
  FLOAT            = INT? "." INT FLOAT_SUFFIX?
  FLOAT_SUFFIX     = [dfDF]
  STRING           = "\"" STRING_CHAR* "\""
  STRING_CHAR      = ~[\\\"\n]
  STRING_CHAR      = "\\" [\\\"]
  BACKSLASH_CHAR   = "\\" [\\\"]
  LAYOUT           = [\ \t\n\r]
  COMMENT_CHAR     = [\*]
  LAYOUT           = "/*" INSIDE_COMMENT* "*/"
  INSIDE_COMMENT   = ~[\*]
  INSIDE_COMMENT   = COMMENT_CHAR
  LAYOUT           = "//" ~[\n\r]* NEWLINE_EOF
  NEWLINE_EOF      = [\n\r]
  NEWLINE_EOF      = EOF
  EOF              =

lexical restrictions

  // Ensure greedy matching for lexicals
  
  COMMENT_CHAR    -/- [\/]
  INT             -/- [0-9]
  ID_UNRESTR      -/- [a-zA-Z0-9\_]
  
  // Floats may not be followed by another suffix
  FLOAT           -/- [dfDF]
  
  // EOF may not be followed by any char
  
  EOF             -/- ~[]

context-free restrictions

  // Ensure greedy matching for comments
  
  LAYOUT? -/- [\ \t\n\r]
  LAYOUT? -/- [\/].[\/]
  LAYOUT? -/- [\/].[\*]
