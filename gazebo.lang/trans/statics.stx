module statics

// see README.md for details on how to switch to multi-file analysis

imports

    statics/common
    statics/use
    statics/tli
    statics/bind/alias
    statics/bind/mod
    statics/bind/memb
    statics/bind/prop

rules

    /** declare the selectors @e, @a, @p, @r and @s as aliases */
    populateDefaultSelectors : scope
    populateDefaultSelectors(s_root) :- {s_sel_e s_sel_a s_sel_p s_sel_r s_sel_s}
        // @e: the base selector of all selectors
        new s_sel_e,
        declareAlias(s_root, "e", s_sel_e),
        // TODO: mark registration explicitly as $gzb:base_entity
        // [type==$<minecraft:entity_type>gzb:base_entity]
        declareProp(s_sel_e, "type", PROP_OVERRIDABLE(RESOURCE(nsid("minecraft", ["entity_type"])))),

        // @a: all players
        new s_sel_a, s_sel_a -A-> s_sel_e,
        declareAlias(s_root, "a", s_sel_a),
        // TODO: mark value as $minecraft:player
        // [type==$<minecraft:entity_type>minecraft:player]
        declareProp(s_sel_a, "type", PROP_FINAL(RESOURCE(nsid("minecraft", ["entity_type"])))),

        // @p: nearest players
        new s_sel_p, s_sel_p -A-> s_sel_a,
        declareAlias(s_root, "p", s_sel_p),
        // [sort="nearest",limit=1]
        declareProp(s_sel_a, "sort", PROP_FINAL(STRING())),
        declareProp(s_sel_a, "limit", PROP_FINAL(INT())),

        // @r: random players
        new s_sel_r, s_sel_r -A-> s_sel_a,
        // [sort="random",limit=1]
        declareAlias(s_root, "r", s_sel_r),
        declareProp(s_sel_r, "sort", PROP_FINAL(STRING())),
        declareProp(s_sel_r, "limit", PROP_FINAL(INT())),

        // @s: sender
        new s_sel_s, s_sel_s -A-> s_sel_e,
        declareAlias(s_root, "s", s_sel_s),
        // TODO: implement proper semantics
        // [limit=1]
        declareProp(s_sel_s, "limit", PROP_FINAL(INT())).

rules // single-file entry point

    programOk : Start

    programOk(Start(u, t)) :- {s_root s_mod s_mod_init NSIDmod Tmod}
        new s_root,
        populateDefaultSelectors(s_root),
        // TODO: declare global gamemode enum???

        new s_mod_init, s_mod_init -M-> s_root,
        declareMod(s_root, nsid("minecraft", ["world"]), MOD(s_mod_init)),
        declareMemb(s_mod_init, "setblock",
            MEMB_MODVARFN(),
            FUNC([
                // TODO: allow any pos
                ("pos", POS(POS_ABS(), INT())),
                ("block", RESOURCE(nsid("minecraft", ["block"])))
            ], VOID())
        ),

        new s_mod, s_mod -M-> s_root,
        NSIDmod == nsid("myns", ["myname"]),
        Tmod == MOD(s_mod),
        declareMod(s_root, NSIDmod, Tmod),
        !currmod[(NSIDmod, Tmod)] in s_mod,

        usesOk(s_mod, u),
        tlisOk(s_root, s_mod, t).

rules // multi-file entry point

    projectOk : scope

    projectOk(s).

    fileOk : scope * Start

    fileOk(s, start) :-
        // TODO: link scope
        programOk(start).
