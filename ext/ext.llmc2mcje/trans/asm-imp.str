module asm-imp

/**
 * Module to assemble "IMP"-compliant text.
 * See: https://github.com/Arcensoth/imp-spec
 */

imports

  asm
  common
  str_common

signature

  sorts Header-IMP Annotation-IMP
  constructors
    Header-IMP : NSID * List(string) * List(Annotation-IMP) -> Header-IMP
    Handles-Annotation-IMP : List(NSID) -> Annotation-IMP

rules // asm-imp :: Header-IMP -> List(string)

  asm-imp: Header-IMP(nsid, comments*, annotations*) ->
    [
      <concat-strings> ["> ", nsid']
    , ""
    , comments'*
    , ""
    , "    (Generated by Gazebo)"
    , ""
    , annotations'*
    ]
    with
      nsid' := <asm-nsid> nsid
    ; comments'* := <
        prefix-lines-list(|" ")
      > comments*
    ; annotations'* := <
        map(asm-imp-annotation)
      ; flatten-list
      ; prefix-lines-list(|" ")
      > annotations*

rules // asm-imp-annotation :: Annotation-IMP -> List(string)

  asm-imp-annotation =
    asm-imp-annotation-
  ; ?(k, vs*)
    // return the empty list if there weren't actually any values associated
  ; if <?[]> vs* then ![] else
    ![
      // prefix the key with an "@" sign
      <concat-strings> ["@", k]
      // prefix all value lines with two spaces
    , <prefix-lines-list(|"  ")> vs*
    ]
    end

  asm-imp-annotation-: Handles-Annotation-IMP(nsids) -> ("handles", nsids')
    with
      nsids' := <
        map(asm-nsid)
      ; prefix-lines-list(|"#")
      > nsids
