module statics/expr/raw

imports

    statics/common
    statics/expr

rules

    typeOfRaw : scope * Raw -> TYPE

    typeOfRaw(s, Raw(parts)) = INT() :-
        rawPartsOk(s, parts).

rules

    rawPartsOk maps rawPartOk(*, list(*))
    rawPartOk : scope * RawPart

    rawPartOk(s, InterpolateID(ref)) :-
        _ == typeOfExpr(s, Ref2Expr(ref)),
        try { false } | note $[TODO: check suitability]@ref.

    rawPartOk(s, InterpolateExpr(e)) :-
        _ == typeOfExpr(s, e),
        try { false } | note $[TODO: check suitability]@e.

    rawPartOk(s, InterpolateConfigured(conf, e)) :-
        _ == typeOfExpr(s, e),
        try { false } | note $[TODO: check suitability]@e,
        try { false } | note $[TODO: check validity]@conf.

    rawPartOk(s, RawPart(_)).
