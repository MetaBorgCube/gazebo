module statics/type/bounds-llb-compound

imports

    statics/common
    statics/bind/field
    statics/type/interface
    statics/type/bounds
    statics/type/bounds-typeEnv

rules

    llbCompound : list(scope) -> scope
    llbCompound([]) = s_llbc_anon :- new s_llbc_anon.
    llbCompound([s]) = s.
    llbCompound([s,s]) = s. // prevent infinite recursion
    llbCompound(ss@[_,_]) = s_llbc :- {shadowEnv}
        new s_llbc,
        linkOriginScopes(s_llbc, ss),
        shadowEnv == llbCompoundUnion([], ss),
        declareFields(s_llbc, shadowEnv).

rules

    llbCompoundUnion : list((string * TYPE)) * list(scope) -> list((string * TYPE))
    llbCompoundUnion(E, []) = E.
    llbCompoundUnion(E, [s_curr|sxs]) = llbCompoundUnion(E', sxs) :- {Ecurr}
        Ecurr == extractTypeEnv(queryAllFields(s_curr)),
        E' == unionEnv(E, Ecurr).

rules

    /** LLB all left items with a right item, add all 'remaining' right items unconditionally */
    unionEnv : list((string * TYPE)) * list((string * TYPE)) -> list((string * TYPE))
    unionEnv(El, []) = El.
    unionEnv([], Er) = Er.
    unionEnv(El@[(name, Tl)|El'], Er) = [(name/*preserves ref order*/, Tllb) | unionEnv(El', Er')] :- {Tr}
        Tr == typeEnv_lookup(name, Er),
        Tllb == llb(Tl, Tr),
        try { Tllb != BOTTOM() } | error $[at least two base interfaces have a conflict on field [name] (compound union produces unassignable type)],
        Er' == typeEnv_del(name, Er).
