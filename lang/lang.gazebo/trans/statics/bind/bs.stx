module statics/bind/bs

imports

    statics/common

rules

    declareState : scope * string * TYPE

    declareState(s_ss, name, T) :-
        !bs[name, T] in s_ss,
        queryState(s_ss, name) == [_] | error $[duplicate definition]@name.

rules

    queryState : scope * string -> list((path * (string * TYPE)))

    queryState(s, name) = p :-
        query bs
            filter e and { x :- x == name }
            in s |-> p.

rules

    resolveState : scope * string -> (string * TYPE)

    resolveState(s, name) = resolveState_matchRes(p) :-
        p == queryState(s, name).

    resolveState_matchRes : list((path * (string * TYPE))) -> (string * TYPE)
    resolveState_matchRes([(_, res)]) = res.
    resolveState_matchRes(_) = ("$unresolved", UNK()) :-
        false.
