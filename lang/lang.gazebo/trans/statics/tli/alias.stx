module statics/tli/alias

imports

    statics/common
    statics/expr/selector
    statics/bind/alias
    statics/selectors

rules

    aliasOk : scope * scope * Alias

    aliasOk(_, s, Alias(dst, src)) :-
        aliasOkCommon(s, dst, typeOfSelector(s, src)).

    /** special case for the absolute root (@e = @e), as there would otherwise be no alias-of to resolve */
    aliasOk(s_root, _, GlobalAlias(Selector(name, []), Selector(name, []))) :- {s_sel_root}
        new s_sel_root,
        !sel_name[name] in s_sel_root,
        !sel_root[1] in s_sel_root,
        declareAlias(s_root, name, s_sel_root).

    aliasOk(s_root, s, GlobalAlias(dst, src)) :-
        aliasOkCommon(s_root, dst, typeOfRootSelector(s, src)).

rules

    /** scope to declare in * destination selector * type of source selector */
    aliasOkCommon : scope * Selector * TYPE

    aliasOkCommon(s_target, Selector(name, dstProps), Tsrc) :- {s_sel}
        dstProps == [] | error $[destination must not have any properties]@dstProps,
        Tsrc == SELECTOR(s_sel),
        declareAlias(s_target, name, s_sel).
