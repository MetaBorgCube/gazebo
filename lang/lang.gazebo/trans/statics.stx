module statics

imports

    statics/common
    statics/use
    statics/tli
    statics/bind/alias
    statics/bind/mod
    statics/bind/memb

rules

    /** root * mod nsid * uses * tlis */
    ok : scope * NSIDi * list(Use) * list(Tli)

    ok(s_root, nsid, uses, tlis) :- {s_mod Tmod}
        new s_mod, s_mod -M-> s_root,
        Tmod == MOD(s_mod),
        declareMod(s_root, nsid, Tmod),
        !currmod[(nsid, Tmod)] in s_mod,

        usesOk(s_mod, uses),
        tlisOk(s_root, s_mod, tlis).

rules

    startOk : scope * Start

    startOk(s_root, Start(u, t)) :-
        try { false } | warning $[no module indentification],
        ok(s_root, NSIDiFull("myns", ["myname"]), u, t).

    startOk(s_root, StartModule(nsid, u, t)) :-
        ok(s_root, nsidi(nsid), u, t).

    startOk(s_root, StartInject(nsid, u, t)) :-
        ok(s_root, nsid, u, t).

rules // single-file entry point

    programOk : Start

    programOk(start) :- {s_root}
        new s_root,
        startOk(s_root, start).

rules // multi-file entry point

    projectOk : scope

    projectOk(s_root).

    fileOk : scope * Start

    fileOk(s_root, start) :-
        startOk(s_root, start).
